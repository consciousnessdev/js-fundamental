{"version":3,"file":"app/es5/VariablesAndParameters.js","sources":["app/es5/VariablesAndParameters.js","@traceur/generated/TemplateParser/1","@traceur/generated/TemplateParser/4","@traceur/generated/TemplateParser/3","@traceur/generated/TemplateParser/2"],"names":[],"mappings":"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","sourcesContent":["describe(\"how let work\", function(){\r\n\tit(\"will provide block scoping, unlike var\", function() {\r\n    var doWork = function(flag){\r\n      if (flag) {\r\n        let x = 3;\r\n        return x;\r\n      }\r\n    };\r\n    var result = doWork(true);\r\n\t\texpect(result).toBe(3);\r\n  });\r\n\r\n  it(\"will provide block scoping with for\", function() {\r\n    var doWork = function(flag){\r\n      for (var i = 0; i < 10; i++) {\r\n\r\n      };\r\n      return i;\r\n    };\r\n    var result = doWork();\r\n\t\texpect(result).toBe(10);\r\n\t});\r\n});\r\n\r\ndescribe(\"using const\", function(){\r\n\tit(\"will make variable readonly\", function() {\r\n    const MAX = 10;\r\n\t\texpect(MAX).toBe(10);\r\n  });\r\n\r\n  it(\"will provide block scoping with for\", function() {\r\n    const x = 12;\r\n    var doWork = function(flag){\r\n      let x = 10;\r\n      return x;\r\n    };\r\n    var result = doWork();\r\n    expect(result).toBe(10);\r\n    expect(x).toBe(12);\r\n\t});\r\n});\r\n\r\ndescribe(\"desctructuring\", function(){\r\n\tit(\"can destrucure array\", function() {\r\n    let [, x, y, z] = [1, 3, 2];\r\n    expect(x).toBe(3);\r\n    expect(y).toBe(2);\r\n    expect(z).toBeUndefined();\r\n  });\r\n\r\n  it(\"can destrucure objects\", function() {\r\n    let { firstName, lastName } = {\r\n      firstName: \"Fahmi\",\r\n      lastName: \"Idris\"\r\n    };\r\n    expect(firstName).toBe('Fahmi');\r\n    expect(lastName).toBe('Idris');\r\n  });\r\n});\r\n\r\ndescribe(\"default parameters\", function(){\r\n\tit(\"provide defaults\", function() {\r\n    var doWork = function(name = 'Fahmi') {\r\n      return name;\r\n    }\r\n    var result = doWork();\r\n    expect(result).toBe('Fahmi');\r\n  });\r\n});\r\n\r\ndescribe(\"rest parameters\", function(){\r\n\tit(\"is like varargs\", function() {\r\n    var doWork = function(...numbers) {\r\n      let result = 0;\r\n      numbers.forEach(function(n) {\r\n        result += n;\r\n      })\r\n      return result;\r\n    }\r\n    // var result = doWork(1,2,3);\r\n    // expect(doWork()).toBe(6);\r\n  });\r\n});\r\n\r\ndescribe(\"sphread\", function(){\r\n\tit(\"can build arrays\", function() {\r\n    var a = [4,5];\r\n    var b = [1,2,3, ...a];\r\n    expect(b).toEqual([1,2,3,4,5]);\r\n  });\r\n});\r\n\r\ndescribe(\"templates\", function(){\r\n\tit(\"can combine data\", function() {\r\n    var doWork = function(name) {\r\n      return `hello ${name}`;\r\n    }\r\n    var result = doWork('fahmi')\r\n    expect(result).toBe('hello fahmi');\r\n  });\r\n});","\n            for (var $__placeholder__0 = [], $__placeholder__1 = 0;\n                 $__placeholder__2 < arguments.length; $__placeholder__3++)\n              $__placeholder__4[$__placeholder__5] = arguments[$__placeholder__6];","$traceurRuntime.setProperty($__placeholder__0,\n          $__placeholder__1, $__placeholder__2)","$__placeholder__0[$traceurRuntime.toProperty($__placeholder__1)]","$traceurRuntime.spread($__placeholder__0)"]}